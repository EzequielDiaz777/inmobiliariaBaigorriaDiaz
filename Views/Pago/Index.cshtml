@model IEnumerable<inmobiliariaBaigorriaDiaz.Models.Pago>

@{ ViewData["Title"] = "Index"; }

<h1 class="text-center"><b>LISTA DE PAGOS</b></h1>
<div class="d-flex justify-content-between align-items-center my-3">
    <div>
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar...">
    </div>
    <div class="form-group mx-2">
    </div>
    <div class="form-group">
        <select id="estadoPagos" class="form-control text-center">
            <option value="disponible">Abonado</option>
            <option value="no-disponible">Anulado</option>
            <option value="todos">Todos</option>
        </select>
    </div>
</div>
<table class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NumeroDePago)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdContrato)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Monto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MesDePago)
            </th>
            <th class="no-ordenable">
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th class="no-ordenable">
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="centered-row" data-Estado="@item.Estado.ToString().ToLower()">
                <td>
                    @Html.DisplayFor(modelItem => item.NumeroDePago)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdContrato)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Monto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MesDePago)
                </td>
                <td>
                    @if (item.Estado)
                    {
                        <span>Abonado</span>
                    }
                    else
                    {
                        <span>Anulado</span>
                    }
                </td>
                <td>
                    <span class="button-column">
                        <a href="@Url.Action("Edit", new { id = item.NumeroDePago })" title="Editar"> <i
                                class="fas fa-edit custom-color"></i></a>
                        |
                        <a href="@Url.Action("Details", new { id = item.NumeroDePago })" title="Detalles"> <i
                                class="fas fa-info-circle"></i></a>
                        @if (User.IsInRole("Administrador"))
                        {
                            @if (item.Estado)
                            {
                                <span class="button-icon">
                                    | <a href="@Url.Action("Delete", new { id = item.NumeroDePago })" title="Baja">
                                        <i class="fa-solid fas fa-trash-alt text-danger"></i></a>
                                </span>
                            }
                            else @if (!item.Estado)
                            {
                                <span class="button-icon text-success">
                                    | <a href="@Url.Action("Alta", new { id = item.NumeroDePago })" title="Alta"
                                        class="text-success">
                                        <i class="fa-solid fa-check-circle"></i></a>
                                </span>
                            }
                        }
                    </span>
                </td>
            </tr>
        }
    </tbody>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#estadoPagos').change(function () {
                var estado = $(this).val();
                $('.table tbody tr').each(function () {
                    var disponible = $(this).data("estado");
                    if (estado === 'todos') {
                        $(this).show();
                    } else if (estado === 'disponible' && disponible) {
                        $(this).show();
                    } else if (estado === 'no-disponible' && (!disponible)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.table tbody tr').each(function () {
                    var rowData = $(this).text().toLowerCase();
                    if (rowData.indexOf(searchText) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('th').click(function () {
                if (!$(this).hasClass('no-ordenable')) {
                    var table = $(this).parents('table').eq(0);
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                    this.asc = !this.asc;
                    if (!this.asc) { rows = rows.reverse(); }
                    for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                    // Remover todas las clases de ordenación de las columnas
                    $('th').removeClass('ascending descending');

                    // Remover todos los triángulos de las columnas
                    $('.sort-icon').remove();

                    // Agregar triángulo al lado del encabezado de la columna clicada
                    $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                }
            });

            // Remover triángulos cuando se colapsa el menú de navegación
            $('.navbar-toggler').click(function () {
                $('.sort-icon').remove();
            });

            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }

            $('#estadoPagos').trigger('change');
        });
    </script>
</table>
