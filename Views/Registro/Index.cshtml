@model IEnumerable<inmobiliariaBaigorriaDiaz.Models.Registro>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center"><b>LISTA DE REGISTROS</b></h1>
<div class="d-flex align-items-center justify-content-between my-3">
    <div class="d-flex align-items-center">
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar...">
    </div>
</div>
<table class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Usuario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdFila)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NombreDeTabla)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoDeAccion)
            </th>
            <th class="no-ordenable">
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) 
        {
            <tr class="centered-row">
                <td>
                    @item.Usuario.Apellido @Html.Raw(", ") @item.Usuario.Nombre
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdFila)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NombreDeTabla)
                </td>
                <td>
                    @item.TipoDeAccion
                </td>
                <td>
                    <span class="button-column">
                        <a href="@Url.Action("Details", new { id = item.IdRegistro })" title="Detalles"> <i
                                class="fas fa-info-circle"></i></a>
                    </span>
                </td>
            </tr>
        }
    </tbody>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.table tbody tr').each(function () {
                    var rowData = $(this).text().toLowerCase();
                    if (rowData.indexOf(searchText) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('th').click(function () {
                if (!$(this).hasClass('no-ordenable')) {
                    var table = $(this).parents('table').eq(0);
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                    this.asc = !this.asc;
                    if (!this.asc) { rows = rows.reverse(); }
                    for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                    // Remover todas las clases de ordenación de las columnas
                    $('th').removeClass('ascending descending');

                    // Remover todos los triángulos de las columnas
                    $('.sort-icon').remove();

                    // Agregar triángulo al lado del encabezado de la columna clicada
                    $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                }
            });

            // Remover triángulos cuando se colapsa el menú de navegación
            $('.navbar-toggler').click(function () {
                $('.sort-icon').remove();
            });

            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
        });
    </script>
</table>
