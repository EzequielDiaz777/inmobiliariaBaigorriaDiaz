@model IEnumerable<inmobiliariaBaigorriaDiaz.Models.Contrato>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center"><b>LISTA DE CONTRATOS</b></h1>
<div class="d-flex justify-content-between align-items-center my-3">
    <div class="d-flex flex-column">
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar...">
    </div>
    <div class="form-group">
        <label for="fechaDesdeInput">Fecha desde:</label>
        <input type="date" style="width: fit-content;" id="fechaDesdeInput" class="form-control">
    </div>
    <div class="form-group">
        <label for="fechaHastaInput">Fecha hasta:</label>
        <input type="date" style="width: fit-content;" id="fechaHastaInput" class="form-control">
    </div>
    <div class="form-group text-center">
        <select id="estadoContratos" class="form-control text-center">
            <option value="disponible">&#8194;Vigente</option>
            <option value="no-disponible">&#8194;No vigente</option>
            <option value="todos">&#8194;Todos</option>
        </select>
    </div>
</div>

<table class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdInquilino)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdInmueble)
            </th>
            <th class="no-ordenable">
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th class="no-ordenable">
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="centered-row" data-Alquiler-Desde="@item.AlquilerDesde.ToString().ToLower()" data-Alquiler-Hasta="@item.AlquilerHasta.ToString().ToLower()" data-Estado="@item.Estado.ToString().ToLower()">
                <td>
                    @item.Inquilino.ToString()
                </td>
                <td>
                    @Html.DisplayFor(model => item.Inmueble.Direccion)
                </td>
                <td>
                    @if (!item.Estado)
                    {
                        <span>No</span>
                    }
                    else
                    {
                        <span>Si</span>
                    }
                </td>
                <td>
                    <span class="button-column">
                        <a href="@Url.Action("Edit", new { id = item.IdContrato })" title="Editar"> <i
                                class="fas fa-edit custom-color"></i></a>
                        |
                        <a href="@Url.Action("Details", new { id = item.IdContrato })" title="Detalles"> <i
                                class="fas fa-info-circle"></i></a>
                        @if (User.IsInRole("Administrador") && item.Estado)
                        {
                            <span class="button-icon">
                                | <a href="@Url.Action("Delete", new { id = item.IdContrato })" title="Baja">
                                    <i class="fa-solid fas fa-trash-alt text-danger"></i></a>
                            </span>
                        }
                        else @if (User.IsInRole("Administrador") && !item.Estado)
                        {
                            <span class="button-icon text-success">
                                | <a href="@Url.Action("Alta", new { id = item.IdContrato })" title="Alta" class="text-success">
                                    <i class="fa-solid fa-check-circle"></i></a>
                            </span>
                        }
                        @if (item.Estado)
                        {
                            <span>
                                | <a href="@Url.Action("Create", "Pago", new { idContrato = item.IdContrato, monto = item.Precio })" title="Nuevo Pago"><i class="fa-solid fa-money-bill-wave" style="color: green "></i></a>
                            </span>
                        }
                        <span>
                            | <a href="@Url.Action("Create", new { id = item.IdContrato })" title="Renovar Contrato"><i
                                    class="fa-solid fa-file-signature" style="color: black"></i></a>
                        </span>
                    </span>
                </td>
            </tr>
        }
    </tbody>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#estadoContratos').change(function () {
                var estado = $(this).val();
                $('.table tbody tr').each(function () {
                    var disponible = $(this).data("estado");
                    if (estado === 'todos') {
                        $(this).show();
                    } else if (estado === 'disponible' && disponible) {
                        $(this).show();
                    } else if (estado === 'no-disponible' && (!disponible)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            function formatDate(dateString) {
                var parts = dateString.split('-');
                if (parts.length === 3) {
                    var year = parts[0];
                    var month = parts[1].length === 1 ? '0' + parts[1] : parts[1];
                    var day = parts[2].length === 1 ? '0' + parts[2] : parts[2];
                    return day + '-' + month + '-' + year;
                } else {
                    return '';
                }
            }

            $('#fechaDesdeInput, #fechaHastaInput').on('change', function () {
                var fechaDesde = $('#fechaDesdeInput').val();
                var fechaHasta = $('#fechaHastaInput').val();
                var fechaDesdeCorregido = formatDate(fechaDesde);
                var fechaHastaCorregido = formatDate(fechaHasta);

                $('.table tbody tr').each(function () {
                    var fechaContratoDesde = $(this).data('alquiler-desde');
                    var fechaContratoHasta = $(this).data('alquiler-hasta');

                    // Convertir las fechas de contrato al formato 'dd-mm-yyyy'
                    var fechaContratoDesdeFormateada = formatDate(fechaContratoDesde);
                    var fechaContratoHastaFormateada = formatDate(fechaContratoHasta);

                    // Verificar si la fecha del contrato está dentro del rango especificado
                    if ((fechaDesdeCorregido === '' || fechaContratoDesdeFormateada >= fechaDesdeCorregido) && (fechaHastaCorregido === '' || fechaContratoHastaFormateada <= fechaHastaCorregido)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.table tbody tr').each(function () {
                    var rowData = $(this).text().toLowerCase();
                    if (rowData.indexOf(searchText) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('th').click(function () {
                if (!$(this).hasClass('no-ordenable')) {
                    var table = $(this).parents('table').eq(0);
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                    this.asc = !this.asc;
                    if (!this.asc) { rows = rows.reverse(); }
                    for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                    // Remover todas las clases de ordenación de las columnas
                    $('th').removeClass('ascending descending');

                    // Remover todos los triángulos de las columnas
                    $('.sort-icon').remove();

                    // Agregar triángulo al lado del encabezado de la columna clicada
                    $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                }
            });

            // Remover triángulos cuando se colapsa el menú de navegación
            $('.navbar-toggler').click(function () {
                $('.sort-icon').remove();
            });

            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }

            // Aquí movemos la línea para disparar el evento change
            $('#estadoContratos').trigger('change');
        });
    </script>
</table>
