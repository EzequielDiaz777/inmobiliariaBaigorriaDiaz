@model IEnumerable<inmobiliariaBaigorriaDiaz.Models.Contrato>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center"><b>LISTA DE CONTRATOS</b></h1>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center my-3">
                <!-- Contenedor para "Alta" y "searchInput" -->
                <div class="d-flex flex-column">
                    <input type="text" id="searchInput" class="form-control me-2" placeholder="Buscar...">
                    <!-- Contenedor para el paginado -->
                    <div class="pagination-container d-flex justify-content-between align-items-center mt-2">
                        <!-- Botón para ir a la página anterior -->
                        <a href="@Url.Action("Index", new { paginado = ViewBag.currentPage - 1, limite = ViewBag.limite })"
                            class="btn btn-secondary @(ViewBag.currentPage == 1 ? "disabled" : "")">
                            Anterior
                        </a>
                        <!-- Enlaces de paginación -->
                        <div class="d-flex align-items-center">
                            @{
                                int rango = 2;
                                int totalPages = ViewBag.totalPages;
                                int startPage = Math.Max(1, ViewBag.currentPage - rango);
                                int endPage = Math.Min(totalPages, startPage + 4);
                                if (endPage - startPage + 1 < 5)
                                {
                                    if (startPage == 1)
                                    {
                                        endPage = Math.Min(startPage + 4, totalPages);
                                    }
                                    else if (endPage == totalPages)
                                    {
                                        startPage = Math.Max(endPage - 4, 1);
                                    }
                                }
                            }
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <a href="@Url.Action("Index", new { paginado = i, limite = ViewBag.limite })"
                                    class="btn @(i == ViewBag.currentPage ? "btn-primary" : "btn-light") mx-1">
                                    @i
                                </a>
                            }
                            <!-- Botón para ir a la página siguiente -->
                            <a href="@Url.Action("Index", new { paginado = ViewBag.currentPage + 1, limite = ViewBag.limite })"
                                class="btn btn-secondary @(ViewBag.currentPage == totalPages ? "disabled" : "")">
                                Siguiente
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Contenedor para campos de fechas -->
                <div class="d-flex flex-column mx-2">
                    <div class="form-group text-center mb-2">
                        <label for="fechaDesdeInput">Fecha desde:</label>
                        <input type="date" id="fechaDesdeInput" class="form-control">
                    </div>
                    <div class="form-group text-center">
                        <label for="fechaHastaInput">Fecha hasta:</label>
                        <input type="date" id="fechaHastaInput" class="form-control">
                    </div>
                </div>

                <!-- Contenedor para "Buscar contratos hasta:" -->
                <div class="form-group text-center me-2">
                    <div>
                        <label for="estadoContratos">Buscar contratos hasta:</label>
                        <div class="d-flex align-items-center">
                            <select id="contratosHastaSelect" class="form-control text-center"
                                style="width: fit-content;">
                                <option value="">Seleccione una opción</option>
                                <option value="30">30</option>
                                <option value="60">60</option>
                                <option value="90">90</option>
                                <option value="custom">Seleccionar plazo</option>
                            </select>
                            <input type="number" id="contratosHastaInput" class="form-control"
                                style="width: 100px; display: none; margin-left: 10px;" placeholder="plazo">
                        </div>
                    </div>
                </div>

                <!-- Contenedor para "Ordenar por:" y "Cantidad de filas" -->
                <div class="d-flex flex-column align-items-center me-2">
                    <!-- Contenedor para "Ordenar por:" -->
                    <div class="form-group">
                        <span>Ordenar por:</span>
                        <select id="estadoPropietarios" class="form-control text-center">
                            <option value="todos">Todos</option>
                            <option value="disponible">Activo</option>
                            <option value="no-disponible">Inactivo</option>
                        </select>
                    </div>
                    <!-- Contenedor para "Cantidad de filas" -->
                    <div class="form-group mt-2">
                        <span>Cantidad de filas:</span>
                        <select id="limite" class="form-control w-auto text-center mx-auto">
                            <option selected value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ahora, a continuación, tienes la tabla -->

<table class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdInquilino)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdInmueble)
            </th>
            <th class="no-ordenable">
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
    </tbody>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#contratosHastaSelect').change(function () {
                var value = $(this).val();
                // Si el valor seleccionado es 'custom', muestra el input
                if (value === 'custom') {
                    $('#contratosHastaInput').show();
                    $('.table tbody').empty();
                } else if (value !== 'custom') {
                    // Si no es 'custom', oculta el input
                    $('#contratosHastaInput').hide();
                    // Opcional: también puedes limpiar el valor del input
                    $('#contratosHastaInput').val('');
                }
            });

            $('#contratosHastaSelect').change(function () {
                if ($(this).val() !== '' && $(this).val() !== 'custom') {
                    event.preventDefault(); // Evitar que se envíe el formulario
                    var dias = $(this).val();
                    // Realiza una solicitud AJAX al endpoint ObtenerContratosPorFechas
                    cargarTablaConDias(dias);
                }
            });

            $('#contratosHastaInput').keydown(function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Evitar que se envíe el formulario
                    var dias = $(this).val();

                    if (dias === '') {
                        // Muestra un mensaje de alerta si alguno de los campos está vacío
                        alert('Por favor, ingrese una cantidad de días antes de realizar la búsqueda.');
                        return; // Detiene la ejecución de la función si faltan fechas
                    }

                    console.log("Entrando al AJAX")
                    // Realiza una solicitud AJAX al endpoint ObtenerContratosPorFechas
                    cargarTablaConDias(dias);
                }
            });

            function cargarTablaConDias(dias) {
                $.ajax({
                    url: '@Url.Action("ObtenerContratosPorDias", "Contrato")',
                    type: 'GET',
                    data: { dias: dias },
                    dataType: 'json', // Asegura que la respuesta sea interpretada como JSON
                    success: function (response) {
                        // Muestra el tipo de response en la consola
                        console.log('Tipo de response:', typeof response); // Debería mostrar 'object'
                        console.log(response); // Muestra el contenido de response

                        // Verifica si response es un array, si no, conviértelo en uno
                        let contratos = Array.isArray(response) ? response : [response];
                        contratos.forEach(c => {
                            console.log("Mi IdContrato es: ", c.idContrato);
                        })
                        console.log(contratos)

                        // Limpia la tabla actual
                        $('.table tbody').empty();

                        // Itera sobre cada elemento en contratos
                        contratos.forEach(function (item) {
                            cargaDeTabla(item);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error al obtener los contratos por fechas:', error);
                    }
                });
            }

            $('#fechaDesdeInput, #fechaHastaInput').keydown(function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Evitar que se envíe el formulario
                    var fechaDesde = $('#fechaDesdeInput').val();
                    var fechaHasta = $('#fechaHastaInput').val();
                    console.log(fechaDesde);

                    if (fechaDesde === '' || fechaHasta === '') {
                        // Muestra un mensaje de alerta si alguno de los campos está vacío
                        alert('Por favor, ingrese tanto la fecha desde como la fecha hasta para realizar la búsqueda.');
                        return; // Detiene la ejecución de la función si faltan fechas
                    }

                    console.log("Entrando al AJAX")
                    // Realiza una solicitud AJAX al endpoint ObtenerContratosPorFechas
                    $.ajax({
                        url: '@Url.Action("ObtenerContratosPorFechas", "Contrato")',
                        type: 'GET',
                        data: { desde: fechaDesde, hasta: fechaHasta },
                        success: function (response) {
                            // Limpia la tabla actual
                            $('.table tbody').empty();
                            response.forEach(function (item) {
                                cargaDeTabla(item);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Error al obtener los contratos por fechas:', error);
                        }
                    });
                }
            });

            function cargarTabla(url) {
                if (url != '@Url.Action("ObtenerContratosNoVigentes", "Contrato")') {
                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (response) {
                            // Asegúrate de manejar response como un array
                            if (Array.isArray(response)) {
                                // Limpia la tabla actual
                                $('.table tbody').empty();

                                // Itera sobre cada elemento en response
                                response.forEach(function (item) {
                                    var hoy = new Date();
                                    var fechaHasta = new Date(item.alquilerHasta)
                                    console.log(hoy <= fechaHasta)
                                    if (hoy <= fechaHasta) {
                                        // Construye las URL para los enlaces
                                        var editUrl = '/Contrato/Edit/' + item.idContrato;
                                        var detailsUrl = '/Contrato/Details/' + item.idContrato;
                                        var renewUrl = '/Contrato/Create/' + item.idContrato;
                                        var cPagoUrl = '/Pago/Create?idContrato=' + item.idContrato + '&monto=' + item.precio;
                                        var cancelarUrl = 'Contrato/CancelarContrato/' + item.idContrato;

                                        // Construye la fila para la tabla
                                        var row = `
                                                <tr class="centered-row" data-Id-Contrato="${item.idContrato}" data-Alquiler-Desde="${item.alquilerDesde}" data-Alquiler-Hasta="${item.alquilerHasta}">
                                                    <td>${item.inquilino.apellido} ${item.inquilino.nombre}</td>
                                                    <td>${item.inmueble.direccion}</td>
                                                    <td>
                                                        <span class="button-column">
                                                            <span class="button-icon">
                                                                <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${cancelarUrl}" title="Cancelar contrato"><i class="fa-solid fas fa-trash-alt text-danger"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${cPagoUrl}" title="Nuevo Pago"><i class="fa-solid fa-money-bill-wave" style="color: green"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${renewUrl}" title="Renovar Contrato"><i class="fa-solid fa-file-signature" style="color: black"></i></a>
                                                            </span>
                                                        </span>
                                                    </td>
                                                </tr>
                                            `;
                                        // Añade la fila a la tabla
                                        $('.table tbody').append(row);
                                    } else {
                                        // Construye las URL para los enlaces
                                        var editUrl = '/Contrato/Edit/' + item.idContrato;
                                        var detailsUrl = '/Contrato/Details/' + item.idContrato;
                                        var renewUrl = '/Contrato/Create/' + item.idContrato;

                                        // Construye la fila para la tabla
                                        var row = `
                                                <tr class="centered-row" data-Id-Contrato="${item.idContrato}" data-Alquiler-Desde="${item.alquilerDesde}" data-Alquiler-Hasta="${item.alquilerHasta}">
                                                    <td>${item.inquilino.apellido} ${item.inquilino.nombre}</td>
                                                    <td>${item.inmueble.direccion}</td>
                                                    <td>
                                                        <span class="button-column">
                                                            <span class="button-icon">
                                                                <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                                            </span>
                                                            |
                                                            <span class="button-icon">
                                                                <a href="${renewUrl}" title="Renovar Contrato"><i class="fa-solid fa-file-signature" style="color: black"></i></a>
                                                            </span>
                                                        </span>
                                                    </td>
                                                </tr>
                                            `;
                                        // Añade la fila a la tabla
                                        $('.table tbody').append(row);
                                    }
                                });
                            }
                        },

                        error: function (xhr, status, error) {
                            console.error('Error al obtener los contratos:', error);
                        }
                    });
                } else {
                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (response) {
                            // Asegúrate de manejar response como un array
                            if (Array.isArray(response)) {
                                // Limpia la tabla actual
                                $('.table tbody').empty();

                                // Itera sobre cada elemento en response
                                response.forEach(function (item) {
                                    // Construye las URL para los enlaces
                                    var editUrl = '/Contrato/Edit/' + item.idContrato;
                                    var detailsUrl = '/Contrato/Details/' + item.idContrato;
                                    var renewUrl = '/Contrato/Create/' + item.idContrato;

                                    // Construye la fila para la tabla
                                    var row = `
                                            <tr class="centered-row" data-Id-Contrato="${item.idContrato}" data-Alquiler-Desde="${item.alquilerDesde}" data-Alquiler-Hasta="${item.alquilerHasta}">
                                                <td>${item.inquilino.apellido} ${item.inquilino.nombre}</td>
                                                <td>${item.inmueble.direccion}</td>
                                                <td>
                                                    <span class="button-column">
                                                        <span class="button-icon">
                                                            <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                                        </span>
                                                        |
                                                        <span class="button-icon">
                                                            <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                                        </span>
                                                        |
                                                        <span class="button-icon">
                                                            <a href="${renewUrl}" title="Renovar Contrato"><i class="fa-solid fa-file-signature" style="color: black"></i></a>
                                                        </span>
                                                    </span>
                                                </td>
                                            </tr>
                                        `;
                                    // Añade la fila a la tabla
                                    $('.table tbody').append(row);
                                });
                            }
                        },

                        error: function (xhr, status, error) {
                            console.error('Error al obtener los contratos:', error);
                        }
                    });
                }
            }

            function cargaDeTabla(contrato) {
                var hoy = new Date();
                var fechaHasta = new Date(contrato.alquilerHasta)
                console.log(hoy <= fechaHasta)
                if (hoy <= fechaHasta) {
                    // Construye las URL para los enlaces
                    var editUrl = '/Contrato/Edit/' + contrato.idContrato;
                    var detailsUrl = '/Contrato/Details/' + contrato.idContrato;
                    var renewUrl = '/Contrato/Create/' + contrato.idContrato;
                    var cPagoUrl = '/Pago/Create?idContrato=' + contrato.idContrato + '&monto=' + contrato.precio;
                    var cancelarUrl = 'Contrato/CancelarContrato/' + contrato.idContrato;

                    // Construye la fila para la tabla
                    var row = `
                                <tr class="centered-row" data-Id-Contrato="${contrato.idContrato}" data-Alquiler-Desde="${contrato.alquilerDesde}" data-Alquiler-Hasta="${contrato.alquilerHasta}">
                                    <td>${contrato.inquilino.apellido} ${contrato.inquilino.nombre}</td>
                                    <td>${contrato.inmueble.direccion}</td>
                                    <td>
                                        <span class="button-column">
                                            <span class="button-icon">
                                                <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${cancelarUrl}" title="Cancelar contrato"><i class="fa-solid fas fa-trash-alt text-danger"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${cPagoUrl}" title="Nuevo Pago"><i class="fa-solid fa-money-bill-wave" style="color: green"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${renewUrl}" title="Renovar Contrato"><i class="fa-solid fa-file-signature" style="color: black"></i></a>
                                            </span>
                                        </span>
                                    </td>
                                </tr>
                            `;
                    // Añade la fila a la tabla
                    $('.table tbody').append(row);
                } else {
                    // Construye las URL para los enlaces
                    var editUrl = '/Contrato/Edit/' + contrato.idContrato;
                    var detailsUrl = '/Contrato/Details/' + contrato.idContrato;
                    var renewUrl = '/Contrato/Create/' + contrato.idContrato;

                    // Construye la fila para la tabla
                    var row = `
                                <tr class="centered-row" data-Id-Contrato="${contrato.idContrato}" data-Alquiler-Desde="${contrato.alquilerDesde}" data-Alquiler-Hasta="${contrato.alquilerHasta}">
                                    <td>${contrato.inquilino.apellido} ${contrato.inquilino.nombre}</td>
                                    <td>${contrato.inmueble.direccion}</td>
                                    <td>
                                        <span class="button-column">
                                            <span class="button-icon">
                                                <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                            </span>
                                            |
                                            <span class="button-icon">
                                                <a href="${renewUrl}" title="Renovar Contrato"><i class="fa-solid fa-file-signature" style="color: black"></i></a>
                                            </span>
                                        </span>
                                    </td>
                                </tr>
                            `;
                    // Añade la fila a la tabla
                    $('.table tbody').append(row);
                }
            }

            // Evento 'change' para el desplegable '#estadoContratos'
            $('#estadoContratos, #contratosHastaSelect').change(function () {
                var estado = $(this).val();  // Obtiene el valor seleccionado en el desplegable
                // Define la URL a la que se enviará la solicitud AJAX
                var url = '';
                if (estado === 'todos' || estado === '') {
                    url = '@Url.Action("ObtenerContratos", "Contrato")'; // URL para obtener todos los contratos
                } else if (estado === 'disponible') {
                    url = '@Url.Action("ObtenerContratosVigentes", "Contrato")'; // URL para obtener contratos vigentes
                } else if (estado === 'no-disponible') {
                    url = '@Url.Action("ObtenerContratosNoVigentes", "Contrato")'; // URL para obtener contratos no vigentes
                }

                // Realiza la solicitud AJAX
                cargarTabla(url);
            });

            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.table tbody tr').each(function () {
                    var rowData = $(this).text().toLowerCase();
                    if (rowData.indexOf(searchText) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('th').click(function () {
                if (!$(this).hasClass('no-ordenable')) {
                    var table = $(this).parents('table').eq(0);
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                    this.asc = !this.asc;
                    if (!this.asc) { rows = rows.reverse(); }
                    for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                    // Remover todas las clases de ordenación de las columnas
                    $('th').removeClass('ascending descending');

                    // Remover todos los triángulos de las columnas
                    $('.sort-icon').remove();

                    // Agregar triángulo al lado del encabezado de la columna clicada
                    $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                }
            });

            // Remover triángulos cuando se colapsa el menú de navegación
            $('.navbar-toggler').click(function () {
                $('.sort-icon').remove();
            });

            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
            cargarTabla('@Url.Action("ObtenerContratos", "Contrato")');
        });
    </script>
</table>