@model List<Inmueble>

<h1 class="text-center"><b>DISPONIBILIDAD </b></h1>
<br>

<form id="formBuscar" asp-action="Buscar" method="post">
    <h2>Seleccione las opciones que correspondan para iniciar la búsqueda</h2>
    <label for="IdUsoDeInmueble">Seleccione el uso del inmueble</label>
    <select id="IdUsoDeInmueble" class="form-select" name="IdUsoDeInmueble">
        <option selected value="0">Ningún uso en particular </option>
        @foreach (var item in ViewBag.UsosDeInmuebles)
        {
            <option value="@item.IdUsoDeInmueble">@(item.Nombre)</option>
        }
    </select>
    <label for="IdTipoDeInmueble">Seleccione el tipo del inmueble</label>
    <select id="IdTipoDeInmueble" class="form-select" name="IdTipoDeInmueble">
        <option selected value="0">Ningún tipo de inmueble en particular </option>
        @foreach (var item in ViewBag.TiposDeInmuebles)
        {
            <option value="@item.IdTipoDeInmueble">@(item.Nombre)</option>
        }
    </select>
    <br>
    <label for="ambientes">Seleccione la cantidad de ambientes:</label>
    <input type="number" id="ambientes" name="ambientes">
    <br>
    <br>
    <label for="precioDesde">Ingrese desde cuanto desea abonar:</label>
    <input type="number" id="precioDesde" name="precioDesde">
    <br>
    <br>
    <label for="precioHasta">Ingrese hasta cuanto desea abonar:</label>
    <input type="number" id="precioHasta" name="precioHasta">
    <br>
    <br>
    <label for="fechaDesde">Fecha desde:</label>
    <input type="date" id="fechaDesde" name="fechaDesde">
    <br>
    <br>
    <label for="fechaHasta">Fecha hasta:</label>
    <input type="date" id="fechaHasta" name="fechaHasta">
    <br>
    <br>
    <button type="submit">Buscar</button>
</form>

<form id="BuscarInquilino">
    <label for="dni">Ingrese el DNI del inquilino:</label>
    <input type="number" name="dni" id="dni">
    <button type="submit">Buscar</button>
</form>

<div id="resultadoInquilino"></div>

<h2>Inmuebles disponibles:</h2>
<table id="tablaResultados" class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>Nº de Inmueble</th>
            <th>Dirección</th>
            <th>Tipo de Inmueble</th>
            <th>Uso del Inmueble</th>
            <th>Precio mensual del inmueble</th>
            <th>Dueño</th>
            <th class="no-ordenable">Opciones</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#formBuscarInquilino').submit(function (event) {
            event.preventDefault(); // Evitar que se recargue la página

            var dni = $('#dni').val();

            $.ajax({
                url: '@Url.Action("BuscarInquilino", "Inmueble")',
                type: 'GET',
                data: { dni: dni },
                success: function (response) {
                    if (response.success) {
                        console.log()
                        $('#resultadoInquilino').text('Inquilino encontrado: ' + response.inquilino.apellido + ', ' + response.inquilino.nombre);
                    } else {
                        $('#resultadoInquilino').text('El inquilino no se encuentra en el sistema');
                    }
                }
            });
        });


        $('#formBuscar').submit(function (event) {
            event.preventDefault(); // Evitar que se recargue la página

            var formData = $(this).serialize(); // Obtener los datos del formulario

            // Convertir las fechas a formato "yyyy-MM-dd"
            var fechaDesde = new Date($('#fechaDesde').val()).toISOString().split('T')[0];
            var fechaHasta = new Date($('#fechaHasta').val()).toISOString().split('T')[0];

            formData += `&fechaDesde=${fechaDesde}&fechaHasta=${fechaHasta}`;

            $.ajax({
                url: '@Url.Action("Buscar", "Inmueble")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    $('#tablaResultados tbody').empty(); // Limpiar la tabla

                    // Renderizar los resultados en la tabla
                    response.forEach(function (inmueble) {
                        var row = '<tr class="centered-row">';
                        row += '<td>' + inmueble.idInmueble + '</td>';
                        row += '<td>' + inmueble.direccion + '</td>';
                        row += '<td>' + inmueble.tipo.nombre + '</td>';
                        row += '<td>' + inmueble.uso.nombre + '</td>';
                        row += '<td>' + inmueble.precio + '</td>';
                        row += '<td>' + inmueble.duenio.apellido + '</td>';

                        // Columna con botones para editar, detalles y eliminar
                        row += '<td>';
                        row += '<span class="button-column">';
                        row += '<a href="@Url.Action("Edit", "Inmueble")?id=' + inmueble.idInmueble + '" title="Editar"><i class="fas fa-edit custom-color"></i></a>';
                        row += ' | ';
                        row += '<a href="@Url.Action("Details", "Inmueble")?id=' + inmueble.idInmueble + '" title="Detalles"><i class="fas fa-info-circle"></i></a>';
                        row += ' | ';
                        row += '<a href="@Url.Action("Delete", "Inmueble")?id=' + inmueble.idInmueble + '" title="Eliminar"><i class="fas fa-trash-alt text-danger"></i></a>';
                        row += '</span>';
                        row += '</td>';
                        row += '</tr>';
                        $('#tablaResultados tbody').append(row);
                    });

                    // Agregar evento de ordenación a los encabezados de las columnas
                    $('th').click(function () {
                        if (!$(this).hasClass('no-ordenable')) {
                            var table = $(this).closest('table');
                            var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                            this.asc = !this.asc;
                            if (!this.asc) { rows = rows.reverse(); }
                            for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                            // Remover todas las clases de ordenación de las columnas
                            $('th').removeClass('ascending descending');

                            // Remover todos los triángulos de las columnas
                            $('.sort-icon').remove();

                            // Agregar triángulo al lado del encabezado de la columna clicada
                            $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                        }
                    });

                }
            });

        });
    });
    
    function comparer(index) {
        return function (a, b) {
            var valA = getCellValue(a, index), valB = getCellValue(b, index);
            return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
        };
    }

    function getCellValue(row, index) {
        return $(row).children('td').eq(index).text();
    }

</script>
