@model IEnumerable<inmobiliariaBaigorriaDiaz.Models.Inmueble>

@{
    ViewData["Title"] = "Listado de inmuebles";
}

<h1 class="text-center"><b>LISTA DE INMUEBLES</b></h1>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center my-3">
                <!-- Contenedor para "Alta" y "searchInput" -->
                <div class="d-flex flex-column">
                    <div class="d-flex">
                        <input type="text" id="searchInput" class="form-control" placeholder="Buscar...">
                    </div>
                    <!-- Contenedor para el span "Páginas" -->
                    <div class="mt-2">
                        <div class="mt-2">
                            <div class="pagination-container d-flex justify-content-between align-items-center mt-3">
                                <!-- Botón para ir a la página anterior -->
                                <a href="@Url.Action("ListarInmuebles", new { paginado = ViewBag.currentPage - 1, limite = ViewBag.limite })"
                                    class="btn btn-secondary @(ViewBag.currentPage == 1 ? "disabled" : "")">
                                    Anterior
                                </a>

                                <!-- Calcular los límites del rango de páginas a mostrar -->
                                @{
                                    int rango = 2;
                                    int totalPages = ViewBag.totalPages;
                                    int startPage = Math.Max(1, ViewBag.currentPage - rango);
                                    int endPage = Math.Min(totalPages, startPage + 4);
                                    if (endPage - startPage + 1 < 5)
                                    {
                                        if (startPage == 1)
                                        {
                                            endPage = Math.Min(startPage + 4, totalPages);
                                        }
                                        else if (endPage == totalPages)
                                        {
                                            startPage = Math.Max(endPage - 4, 1);
                                        }
                                    }
                                }
                                <!-- Enlaces de paginación -->
                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <a href="@Url.Action("ListarInmuebles", new { paginado = i, limite = ViewBag.limite })"
                                        class="btn @(i == ViewBag.currentPage ? "btn-primary" : "btn-light") mx-1">
                                        @i
                                    </a>
                                }

                                <!-- Botón para ir a la página siguiente -->
                                <a href="@Url.Action("ListarInmuebles", new { paginado = ViewBag.currentPage + 1, limite = ViewBag.limite })"
                                    class="btn btn-secondary @(ViewBag.currentPage == totalPages ? "disabled" : "")">
                                    Siguiente
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group mx-2">
                </div>
                <div class="d-flex justify-content-end">
                    <!-- Agrega `white-space: nowrap` para evitar el salto de línea -->
                    <div class="form-group text-mid d-flex align-items-center me-2" style="white-space: nowrap;">
                        <span class="me-2">Ordenar por:</span>
                        <select id="estadoInmuebles" class="form-control text-center">
                            <option value="disponible">Disponible</option>
                            <option value="no-disponible">No disponible</option>
                            <option value="todos">Todos</option>
                        </select>
                    </div>
                    <div class="form-group text-mid d-flex align-items-center">
                        <span class="me-2">Cantidad de filas:</span>
                        <select id="limite" class="form-control w-auto">
                            <option selected value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<table class="table table-striped table-hover table-bordered custom-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Direccion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tipo.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Uso.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duenio)
            </th>
            <th class="no-ordenable">
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="centered-row" data-Estado="@item.Estado.ToString().ToLower()">
                <td>
                    @Html.DisplayFor(model => item.Direccion)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Tipo.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Uso.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Duenio.Apellido)
                </td>
                <td>
                    <span class="button-column">
                        <a href="@Url.Action("Edit", new { id = item.IdInmueble })" title="Editar"> <i
                                class="fas fa-edit custom-color"></i></a>
                        |
                        <a href="@Url.Action("Details", new { id = item.IdInmueble })" title="Detalles"> <i
                                class="fas fa-info-circle"></i></a>
                        @if (User.IsInRole("Administrador"))
                        {
                            @if (item.Estado)
                            {
                                <span class="button-icon">
                                    | <a href="@Url.Action("Delete", new { id = item.IdInmueble })" title="Baja"> <i
                                            class="fa-solid fas fa-trash-alt text-danger"></i></a>
                                </span>
                            }
                            else @if (!item.Estado)
                            {
                                <span class="button-icon text-success">
                                    | <a href="@Url.Action("Alta", new { id = item.IdInmueble })" title="Alta" class="text-success">
                                        <i class="fa-solid fa-check-circle"></i></a>
                                </span>
                            }
                        }
                </td>
            </tr>
        }
    </tbody>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            let rol = "@ViewBag.rol";
            $('#estadoInmuebles').change(function () {
                var estado = $(this).val();
                $('.table tbody tr').each(function () {
                    var disponible = $(this).data("estado");
                    if (estado === 'todos') {
                        $(this).show();
                    } else if (estado === 'disponible' && disponible) {
                        $(this).show();
                    } else if (estado === 'no-disponible' && (!disponible)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.table tbody tr').each(function () {
                    var rowData = $(this).text().toLowerCase();
                    if (rowData.indexOf(searchText) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('.pag').click(function () {
                var paginado = $(this).text(); // Número de página que se hizo clic
                var limite = $('#limite').val(); // Límite de filas por página

                // Realizar una solicitud AJAX al método Paginado del controlador
                $.ajax({
                    url: '@Url.Action("PaginadoListarInmuebles", "Inmueble")',
                    type: 'GET',
                    data: { limite: limite, paginado: paginado },
                    success: function (response) {
                        $('.tbody').empty();
                        response.forEach(function (inmueble) {
                            var editUrl = `/Inmueble/Edit/${inmueble.idInmueble}`;
                            var detailsUrl = `/Inmueble/Details/${inmueble.idInmueble}`;
                            var deleteUrl = `/Inmueble/Delete/${inmueble.idInmueble}`;
                            var altaUrl = `/Inmueble/Alta/${inmueble.idInmueble}`;

                            var fila = `
                                <tr class="centered-row" data-estado="${inmueble.estado ? 'true' : 'false'}">
                                    <td>${inmueble.direccion}</td>
                                    <td>${inmueble.tipo.nombre}</td>
                                    <td>${inmueble.uso.nombre}</td>
                                    <td>${inmueble.duenio.apellido}</td>
                                    <td>
                                        <span class="button-column">
                                            <a href="${editUrl}" title="Editar"><i class="fas fa-edit custom-color"></i></a>
                                            |
                                            <a href="${detailsUrl}" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                        `;
                            if (rol == 'Administrador') {
                                if (inmueble.estado) {
                                    fila += `
                                            |
                                            <a href="${deleteUrl}" title="Baja"><i class="fa-solid fas fa-trash-alt text-danger"></i></a>
                                        `;
                                } else {
                                    fila += `
                                        |
                                        <a href="${altaUrl}" title="Alta" class="text-success">
                                            <i class="fa-solid fa-check-circle"></i>
                                        </a>
                                    `;
                                }
                            }
                            // Cerrar la columna de botones y la fila
                            fila += `
                                        </span>
                                    </td>
                                </tr>
                                `;
                            $('.tbody').append(fila);
                        });
                        $('#estadoInmuebles').val('todos');
                    }
                });
            });

            $('#limite').change(function () {
                // Obtén el valor seleccionado en el desplegable `limite`
                var limite = $(this).val(); // Límite de filas por página
                window.location.href = '@Url.Action("ListarInmuebles", "Inmueble")' + '?id=' + @ViewBag.id + '&limite=' + limite + '&paginado=' + 1;
            });


            $('th').click(function () {
                if (!$(this).hasClass('no-ordenable')) {
                    var table = $(this).parents('table').eq(0);
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                    this.asc = !this.asc;
                    if (!this.asc) { rows = rows.reverse(); }
                    for (var i = 0; i < rows.length; i++) { table.append(rows[i]); }

                    // Remover todas las clases de ordenación de las columnas
                    $('th').removeClass('ascending descending');

                    // Remover todos los triángulos de las columnas
                    $('.sort-icon').remove();

                    // Agregar triángulo al lado del encabezado de la columna clicada
                    $(this).append('<span class="sort-icon">' + (this.asc ? '▲' : '▼') + '</span>');
                }
            });

            // Remover triángulos cuando se colapsa el menú de navegación
            $('.navbar-toggler').click(function () {
                $('.sort-icon').remove();
            });

            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
            $('#estadoInmuebles').trigger('change');
            $('#limite').val(@ViewBag.limite)
        });
    </script>
</table>
